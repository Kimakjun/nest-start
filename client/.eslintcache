[{"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\index.tsx":"1","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\App.tsx":"3","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\apollo.ts":"4","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\Form\\index.ts":"5","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\Form\\Form.tsx":"6","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\Form\\AntdForm.tsx":"7","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\InputForm\\index.ts":"8","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\InputForm\\InputForm.tsx":"9","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\PageNation\\index.ts":"10","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\PageNation\\PageNation.tsx":"11","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\Feed\\index.ts":"12","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\Feed\\Feed.tsx":"13","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\queries\\feed\\index.ts":"14","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\queries\\feed\\getFeeds.queries.ts":"15","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\queries\\feed\\addFeed.queries.ts":"16","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\ImageUpload\\index.ts":"17","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\ImageUpload\\ImageUpload.tsx":"18"},{"size":478,"mtime":1612167371086,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":691,"mtime":1612451995551,"results":"22","hashOfConfig":"20"},{"size":310,"mtime":1612174466984,"results":"23","hashOfConfig":"20"},{"size":39,"mtime":1612183132166,"results":"24","hashOfConfig":"20"},{"size":927,"mtime":1612184878755,"results":"25","hashOfConfig":"20"},{"size":685,"mtime":1612245727272,"results":"26","hashOfConfig":"20"},{"size":40,"mtime":1612245475602,"results":"27","hashOfConfig":"20"},{"size":3123,"mtime":1612285290268,"results":"28","hashOfConfig":"20"},{"size":41,"mtime":1612285407341,"results":"29","hashOfConfig":"20"},{"size":1092,"mtime":1612323850401,"results":"30","hashOfConfig":"20"},{"size":35,"mtime":1612285326001,"results":"31","hashOfConfig":"20"},{"size":2184,"mtime":1612331581837,"results":"32","hashOfConfig":"20"},{"size":118,"mtime":1612325247661,"results":"33","hashOfConfig":"20"},{"size":316,"mtime":1612325234643,"results":"34","hashOfConfig":"20"},{"size":301,"mtime":1612325219874,"results":"35","hashOfConfig":"20"},{"size":42,"mtime":1612451983639,"results":"36","hashOfConfig":"20"},{"size":1291,"mtime":1612520359276,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1eqf7oo",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\index.tsx",[],["78","79"],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\App.tsx",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\apollo.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\Form\\index.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\Form\\Form.tsx",["80"],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\Form\\AntdForm.tsx",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\InputForm\\index.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\InputForm\\InputForm.tsx",["81","82"],"import { FC, useRef, useState } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Password from \"antd/lib/input/Password\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst InputForm: FC = () => {\r\n  const { handleSubmit, control, errors, watch, reset } = useForm();\r\n\r\n  // https://stackoverflow.com/questions/59875287/react-hook-form-reset-is-not-working-with-controller-antd\r\n  const onSubmit = (data: any) => {\r\n    alert(JSON.stringify(data));\r\n    /** 입려값 초기화 */\r\n    Object.keys(data).forEach((v) => (data[v] = \"\"));\r\n    reset({\r\n      ...data,\r\n    });\r\n  };\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n  const watchPassword = watch(\"password\", false);\r\n\r\n  return (\r\n    <Form {...layout} onFinish={handleSubmit(onSubmit)}>\r\n      <Form.Item\r\n        label=\"email\"\r\n        validateStatus={errors.email && \"error\"}\r\n        help={errors.email && \"올바른 이메일 입력\"}\r\n        required\r\n      >\r\n        <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          rules={{ required: true, pattern: /\\.com$/ }}\r\n          render={({ onChange, value }) => (\r\n            <Input\r\n              placeholder=\"email is required\"\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n          )}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"password\"\r\n        validateStatus={errors.password && \"error\"}\r\n        help={errors.password && \"올바른 password 입력\"}\r\n        required\r\n      >\r\n        <Controller\r\n          name=\"password\"\r\n          control={control}\r\n          rules={{ required: true, minLength: 3, maxLength: 15 }}\r\n          render={({ onChange, value }) => (\r\n            <Input\r\n              placeholder=\"password is required\"\r\n              onChange={onChange}\r\n              value={value}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n        />\r\n      </Form.Item>\r\n      {watchPassword && !errors.password && (\r\n        <Form.Item\r\n          label=\"passwordCheck\"\r\n          validateStatus={errors.passwordCheck && \"error\"}\r\n          help={errors.passwordCheck && \"올바른 passwordCheck 입력\"}\r\n          required\r\n        >\r\n          <Controller\r\n            name=\"passwordCheck\"\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n              minLength: 3,\r\n              maxLength: 15,\r\n              validate: (value) => value === password.current,\r\n            }}\r\n            render={({ onChange, value }) => (\r\n              <Input\r\n                placeholder=\"passwordCheck is required\"\r\n                onChange={onChange}\r\n                value={value}\r\n                type=\"password\"\r\n              />\r\n            )}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item {...tailLayout}>\r\n        <Button htmlType=\"submit\">Submit</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\PageNation\\index.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\PageNation\\PageNation.tsx",["83","84","85"],"import React, { FC } from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Feed from \"../../components/Feed\";\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nconst PageNation = () => {\r\n  return (\r\n    <Layout style={{ height: \"100vh\", minWidth: \"992px\" }}>\r\n      <Header>header</Header>\r\n      <Layout>\r\n        <Sider breakpoint={\"lg\"}>\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n              nav 1\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n              nav 2\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n              nav 3\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Content>\r\n          <Feed />\r\n        </Content>\r\n      </Layout>\r\n      <Footer>footer</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PageNation;\r\n","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\Feed\\index.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\components\\Feed\\Feed.tsx",["86"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { Table, Form, Input, Button } from \"antd\";\r\n\r\nimport { useMutation, useLazyQuery } from \"@apollo/client\";\r\nimport { ADD_FEED, GET_FEEDS } from \"../../queries/feed\";\r\nimport FormItem from \"antd/lib/form/FormItem\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Id\",\r\n    dataIndex: \"_id\",\r\n    key: \"_id\",\r\n  },\r\n  {\r\n    title: \"Content\",\r\n    dataIndex: \"content\",\r\n    key: \"content\",\r\n  },\r\n  {\r\n    title: \"UpdatedAt\",\r\n    dataIndex: \"updatedAt\",\r\n    key: \"updatedAt\",\r\n  },\r\n  {\r\n    title: \"CreatedAt\",\r\n    dataIndex: \"createdAt\",\r\n    key: \"createdAt\",\r\n  },\r\n];\r\n\r\nconst Feed: FC = () => {\r\n  const [feeds, setFeeds] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [query, { loading }] = useLazyQuery(GET_FEEDS, {\r\n    onCompleted: (data) => {\r\n      setFeeds(data.getFeeds.feeds);\r\n      setTotal(data.getFeeds.total);\r\n    },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [addFeed] = useMutation(ADD_FEED, {\r\n    onCompleted: ({ addFeed }) => {\r\n      console.log(addFeed);\r\n      query({ variables: { input: { page: page } } });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    query({ variables: { input: { page: page } } });\r\n  }, [page]);\r\n\r\n  const onSubmit = (data: any) => {\r\n    addFeed({ variables: { input: { content: data.content } } });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onFinish={onSubmit}>\r\n        <FormItem\r\n          label=\"content\"\r\n          name=\"content\"\r\n          rules={[{ required: true, message: \"not empty value\" }]}\r\n        >\r\n          <Input name=\"content\" />\r\n        </FormItem>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          등록\r\n        </Button>\r\n      </Form>\r\n      <Table\r\n        pagination={{\r\n          current: page,\r\n          pageSize: 10,\r\n          total: total,\r\n          showSizeChanger: false,\r\n          onChange: (pickedPage) => {\r\n            setPage(pickedPage);\r\n          },\r\n          position: [\"bottomCenter\"],\r\n        }}\r\n        loading={loading}\r\n        dataSource={feeds}\r\n        columns={columns}\r\n      ></Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\queries\\feed\\index.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\queries\\feed\\getFeeds.queries.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\queries\\feed\\addFeed.queries.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\ImageUpload\\index.ts",[],"C:\\Users\\김학준\\Desktop\\할수있다\\nest-start\\client\\src\\route\\ImageUpload\\ImageUpload.tsx",["87","88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":1,"column":22,"nodeType":"96","messageId":"97","endLine":1,"endColumn":30},{"ruleId":"94","severity":1,"message":"99","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":19},{"ruleId":"94","severity":1,"message":"101","line":4,"column":3,"nodeType":"96","messageId":"97","endLine":4,"endColumn":21},{"ruleId":"94","severity":1,"message":"102","line":5,"column":3,"nodeType":"96","messageId":"97","endLine":5,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":53,"column":6,"nodeType":"105","endLine":53,"endColumn":12,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"107","line":2,"column":32,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"108","line":8,"column":20,"nodeType":"96","messageId":"97","endLine":8,"endColumn":31},{"ruleId":"94","severity":1,"message":"109","line":9,"column":19,"nodeType":"96","messageId":"97","endLine":9,"endColumn":29},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Password' is defined but never used.","'FC' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'Input' is defined but never used.","'setImageUrl' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [page, query]",{"range":"115","text":"116"},[1265,1271],"[page, query]"]